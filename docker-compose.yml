version: "3.8"

services:
  #  server:
  #    build:
  #      context: .
  #      dockerfile: Dockerfile
  #    ports:
  #      - "3000:3000"
  #    # expose: ["3000"]
  #    volumes:
  #      - .:/usr/src/app
  #      - registry:/root/.cargo/registry
  #    depends_on:
  #      # - redis
  #      - nats
  #       - postgres
  #    # links:
  #    #   - postgres
  #    env_file: .env
  #    command: bash -c "bash cargo-watch -x run"

  nats:
    image: nats:latest
    # entrypoint: "/gnatsd -DV"

    restart: unless-stopped
    ports:
      - "8222:8222"
      - "4222:4222"
      - "6222:6222"
  #       hostname: nats
  #       networks:
  #           - nats

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - .docker/redis:/data
    restart: unless-stopped
    deploy:
      replicas: 1
    # configs:
    #   - my_config
    #   - my_other_config

  postgres:
    container_name: postgres
    image: postgres:13.4-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/data/postgres
    volumes:
      - .docker/postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    volumes:
      - .docker/pgadmin:/root/.pgadmin
    ports:
      - "15432:80"
    depends_on:
      - postgres
    restart: unless-stopped

# configs:
#   my_config:
#     file: ./my_config.txt
#   my_other_config:
#     external: true

# networks:
#   default:
#     driver: bridge

# cargo will try to redownload packages @ docker-compose up so store them here.
volumes:
  # mongodb:
  registry:
    driver: local